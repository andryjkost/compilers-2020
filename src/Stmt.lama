-- Statement evaluator.

import State;
import Expr;
import World;
import List;;
import List;

fun eval (c, stmt) {
  case c of [st, [i, o]] ->
    case stmt of
        Skip         -> c
      | Read (x)     -> case i of z : it -> [st <- [x, z], [it, o]] esac
      | Write (expr) -> [st, [i, evalExpr (st, expr)  : o]]
      | Assn (x, e)  -> [(st <- [x, evalExpr (st, e)]), [i, o]]
      | Seq (s1, s2) -> eval (eval (c, s1), s2)
      esac
    esac
}

public fun evalStmt(input, stmt){
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}